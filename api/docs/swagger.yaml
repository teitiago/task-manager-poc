basePath: /api/v1/
definitions:
  dto.TaskCreateRequest:
    properties:
      summary:
        description: Description of a task containing at most 2500 chars
        example: My task description
        maxLength: 2500
        type: string
    required:
    - summary
    type: object
  dto.TaskCreateResponse:
    properties:
      id:
        description: New task identifier following an uuid pattern
        example: 74531653-252b-48c7-b562-63e82f5e3466
        type: string
      status:
        description: The response status, that can be OK or error
        example: OK
        type: string
    required:
    - status
    type: object
  dto.TaskFilterResponse:
    properties:
      status:
        description: Filter status response
        example: OK
        type: string
      tasks:
        description: List of collected tasks
        items:
          $ref: '#/definitions/dto.TaskSingleResponse'
        type: array
    type: object
  dto.TaskPatchRequest:
    properties:
      completed_date:
        description: The timestamp in seconds when the task was completed
        example: 1645606033
        type: integer
      summary:
        description: New task summary
        example: A brand new task summary
        maxLength: 2500
        type: string
    type: object
  dto.TaskResponse:
    properties:
      completed_date:
        description: The timestamp when the task was completed
        example: 1645606035
        type: integer
      created_at:
        description: The timestamp in seconds when the task was created
        example: 1645606033
        type: integer
      modified_at:
        description: The timestamp in seconds when the task was last updated
        example: 1645606033
        type: integer
      summary:
        description: The task summary
        example: My task summary
        type: string
      task_id:
        description: The task identifier (To be removed)
        example: 74531653-252b-48c7-b562-63e82f5e3466
        type: string
      user_id:
        description: The task owner (that might not be provided)
        example: 74531653-252b-48c7-b562-63e82f5e3466
        type: string
    type: object
  dto.TaskSingleResponse:
    properties:
      completed_date:
        description: The timestamp when the task was completed
        example: 1645606035
        type: integer
      created_at:
        description: The timestamp in seconds when the task was created
        example: 1645606033
        type: integer
      modified_at:
        description: The timestamp in seconds when the task was last updated
        example: 1645606033
        type: integer
      task_id:
        description: The task identifier (To be removed)
        example: 74531653-252b-48c7-b562-63e82f5e3466
        type: string
      user_id:
        description: The task owner (that might not be provided)
        example: 74531653-252b-48c7-b562-63e82f5e3466
        type: string
    type: object
host: 0.0.0.0:8000
info:
  contact: {}
  description: Swagger API for Golang Project tasks.
  title: Tasks API
  version: "1.0"
paths:
  /tasks:
    get:
      description: Collects the whole task information
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: name search by user_id example `74531653-252b-48c7-b562-63e82f5e3466`
        in: query
        name: user_id
        type: string
      - description: timestamp in seconds to search for completed tasks example `1645604999`
        in: query
        name: completed_date_gt
        type: integer
      - description: timestamp in seconds to search for completed tasks example `1645604999`
        in: query
        name: completed_date_lt
        type: integer
      - description: timestamp in seconds to search for created tasks example `1645604999`
        in: query
        name: created_at_gt
        type: integer
      - description: timestamp in seconds to search for created tasks example `1645604999`
        in: query
        name: created_at_lt
        type: integer
      - description: timestamp in seconds to search for modified tasks example `1645604999`
        in: query
        name: modified_at_gt
        type: integer
      - description: timestamp in seconds to search for modified tasks example `1645604999`
        in: query
        name: modified_at_lt
        type: integer
      - description: results page example `1`
        in: query
        name: page
        type: integer
      - description: results limit example `10`
        in: query
        name: limit
        type: integer
      - description: how to sort results, example `created_at asc`
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskFilterResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a specific task
      tags:
      - task
    post:
      consumes:
      - application/json
      description: Creates a new task
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: The task body to be created
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/dto.TaskCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TaskCreateResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates a new task
      tags:
      - task
  /tasks/{task_id}:
    delete:
      description: Deletes a given task
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: the task identifier to be deleted example `74531653-252b-48c7-b562-63e82f5e3466`
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Deletes a task
      tags:
      - task
    get:
      description: Collects the whole task information
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: the task identifier to collect example `74531653-252b-48c7-b562-63e82f5e3466`
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a specific task
      tags:
      - task
    patch:
      consumes:
      - application/json
      description: Updates a given task
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: the task identifier to updated example `74531653-252b-48c7-b562-63e82f5e3466`
        in: path
        name: task_id
        required: true
        type: string
      - description: The task body to be created
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/dto.TaskPatchRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Updates a task
      tags:
      - task
swagger: "2.0"
