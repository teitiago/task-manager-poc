{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for Golang Project tasks.",
        "title": "Tasks API",
        "contact": {},
        "version": "1.0"
    },
    "host": "0.0.0.0:8000",
    "basePath": "/api/v1/",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Collects the whole task information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get a specific task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name search by user_id example `74531653-252b-48c7-b562-63e82f5e3466`",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for completed tasks example `1645604999`",
                        "name": "completed_date_gt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for completed tasks example `1645604999`",
                        "name": "completed_date_lt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for created tasks example `1645604999`",
                        "name": "created_at_gt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for created tasks example `1645604999`",
                        "name": "created_at_lt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for modified tasks example `1645604999`",
                        "name": "modified_at_gt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "timestamp in seconds to search for modified tasks example `1645604999`",
                        "name": "modified_at_lt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "results page example `1`",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "results limit example `10`",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "how to sort results, example `created_at asc`",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskFilterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Creates a new task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "The task body to be created",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TaskCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{task_id}": {
            "get": {
                "description": "Collects the whole task information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get a specific task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the task identifier to collect example `74531653-252b-48c7-b562-63e82f5e3466`",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a given task",
                "tags": [
                    "task"
                ],
                "summary": "Deletes a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the task identifier to be deleted example `74531653-252b-48c7-b562-63e82f5e3466`",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a given task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Updates a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the task identifier to updated example `74531653-252b-48c7-b562-63e82f5e3466`",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The task body to be created",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TaskPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.TaskCreateRequest": {
            "type": "object",
            "required": [
                "summary"
            ],
            "properties": {
                "summary": {
                    "description": "Description of a task containing at most 2500 chars",
                    "type": "string",
                    "maxLength": 2500,
                    "example": "My task description"
                }
            }
        },
        "dto.TaskCreateResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "id": {
                    "description": "New task identifier following an uuid pattern",
                    "type": "string",
                    "example": "74531653-252b-48c7-b562-63e82f5e3466"
                },
                "status": {
                    "description": "The response status, that can be OK or error",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "dto.TaskFilterResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Filter status response",
                    "type": "string",
                    "example": "OK"
                },
                "tasks": {
                    "description": "List of collected tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TaskSingleResponse"
                    }
                }
            }
        },
        "dto.TaskPatchRequest": {
            "type": "object",
            "properties": {
                "completed_date": {
                    "description": "The timestamp in seconds when the task was completed",
                    "type": "integer",
                    "example": 1645606033
                },
                "summary": {
                    "description": "New task summary",
                    "type": "string",
                    "maxLength": 2500,
                    "example": "A brand new task summary"
                }
            }
        },
        "dto.TaskResponse": {
            "type": "object",
            "properties": {
                "completed_date": {
                    "description": "The timestamp when the task was completed",
                    "type": "integer",
                    "example": 1645606035
                },
                "created_at": {
                    "description": "The timestamp in seconds when the task was created",
                    "type": "integer",
                    "example": 1645606033
                },
                "modified_at": {
                    "description": "The timestamp in seconds when the task was last updated",
                    "type": "integer",
                    "example": 1645606033
                },
                "summary": {
                    "description": "The task summary",
                    "type": "string",
                    "example": "My task summary"
                },
                "task_id": {
                    "description": "The task identifier (To be removed)",
                    "type": "string",
                    "example": "74531653-252b-48c7-b562-63e82f5e3466"
                },
                "user_id": {
                    "description": "The task owner (that might not be provided)",
                    "type": "string",
                    "example": "74531653-252b-48c7-b562-63e82f5e3466"
                }
            }
        },
        "dto.TaskSingleResponse": {
            "type": "object",
            "properties": {
                "completed_date": {
                    "description": "The timestamp when the task was completed",
                    "type": "integer",
                    "example": 1645606035
                },
                "created_at": {
                    "description": "The timestamp in seconds when the task was created",
                    "type": "integer",
                    "example": 1645606033
                },
                "modified_at": {
                    "description": "The timestamp in seconds when the task was last updated",
                    "type": "integer",
                    "example": 1645606033
                },
                "task_id": {
                    "description": "The task identifier (To be removed)",
                    "type": "string",
                    "example": "74531653-252b-48c7-b562-63e82f5e3466"
                },
                "user_id": {
                    "description": "The task owner (that might not be provided)",
                    "type": "string",
                    "example": "74531653-252b-48c7-b562-63e82f5e3466"
                }
            }
        }
    }
}